<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="gv_EmtpyData" xml:space="preserve">
    <value>No users to display in selected group</value>
  </data>
  <data name="gv_hd_Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="gv_hd_Domain" xml:space="preserve">
    <value>Domain</value>
  </data>
  <data name="gv_hd_fullname" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="gv_hd_groupName" xml:space="preserve">
    <value>Group Name</value>
  </data>
  <data name="gv_hd_Username" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="hd_UserManagement" xml:space="preserve">
    <value>User Management</value>
  </data>
  <data name="hndRowBackColor_hiddenfield" xml:space="preserve">
    <value>Back Color</value>
  </data>
  <data name="lblFilterBy" xml:space="preserve">
    <value>Filter By</value>
  </data>
  <data name="lnkAssignUserstoGroup" xml:space="preserve">
    <value>Assign To Group</value>
  </data>
  <data name="mdlAG_Assign" xml:space="preserve">
    <value>Assign</value>
  </data>
  <data name="mdlAG_AssingUsers" xml:space="preserve">
    <value>Assign Users To Group</value>
  </data>
  <data name="mdlAG_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="mdlAG_SelectGrp" xml:space="preserve">
    <value>Select Group</value>
  </data>
  <data name="mdlAlt_Head" xml:space="preserve">
    <value>Alert !</value>
  </data>
  <data name="mdlAlt_Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="mdlDel_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="mdlDel_Delete_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="mdlDel_DelWarText" xml:space="preserve">
    <value>Are you sure to delete user from group &lt;strong&gt;{0} &lt;/strong&gt; ?</value>
  </data>
  <data name="mdlDel_Header" xml:space="preserve">
    <value>Delete Warning</value>
  </data>
  <data name="mdlEUP_Assign" xml:space="preserve">
    <value>Assign</value>
  </data>
  <data name="mdlEUP_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="mdlEUP_ModfyGroup" xml:space="preserve">
    <value>Modify User Group</value>
  </data>
  <data name="mdlEUP_SelectGroup" xml:space="preserve">
    <value>Select Group</value>
  </data>
  <data name="mdlEUP_UserName" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="ddlGroupsList_NoGroup_Text" xml:space="preserve">
    <value>No Groups </value>
  </data>
  <data name="ddlGroupsList_SelectGroup_Text" xml:space="preserve">
    <value>Select Group</value>
  </data>
  <data name="MSG_Group_Delete_Sucess" xml:space="preserve">
    <value>Group deleted successfully</value>
  </data>
  <data name="MSG_Group_Updated_Sucess" xml:space="preserve">
    <value>Group updated successfully</value>
  </data>
  <data name="MSG_SelectAtleastOne_Assign" xml:space="preserve">
    <value>Please select at least one user to assign to group</value>
  </data>
  <data name="MSG_Select_ValidGroupName" xml:space="preserve">
    <value>Please select valid group name</value>
  </data>
  <data name="MSG_UserAssined_ToGroup_Sucess" xml:space="preserve">
    <value>User(s) successfully  assigned to group</value>
  </data>
  <data name="lnkActivateUser" xml:space="preserve">
    <value>Activate Users</value>
  </data>
  <data name="lnkDeactivateUser" xml:space="preserve">
    <value>Deactivate Users</value>
  </data>
  <data name="lnkRemoveUsersFromGroup" xml:space="preserve">
    <value>Remove From Group</value>
  </data>
  <data name="MSG_NoGroups_To_RemoveAssigned" xml:space="preserve">
    <value>No groups assigned to selected users</value>
  </data>
  <data name="MSG_Users_RemovedFromGroup_failed" xml:space="preserve">
    <value>Removing users from group failed</value>
  </data>
  <data name="mdlAG_btn_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="mdlAU_ActionOnUser" xml:space="preserve">
    <value>User Action</value>
  </data>
  <data name="mdlAU_ActivateUser" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="mdlAU_CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="mdlAU_DeactivateUser" xml:space="preserve">
    <value>Deactivate</value>
  </data>
  <data name="gv_hd_IsActive" xml:space="preserve">
    <value>Is Active ?</value>
  </data>
  <data name="MSG_Users_ActivatedSucessfully" xml:space="preserve">
    <value>User(s) activated successfully</value>
  </data>
  <data name="MSG_Users_Activation_failed" xml:space="preserve">
    <value>User(s) activation failed</value>
  </data>
  <data name="MSG_Users_DeActivatedSucessfully" xml:space="preserve">
    <value>User(s) deactivated successfully</value>
  </data>
  <data name="MSG_Users_DeActivation_failed" xml:space="preserve">
    <value>User(s) deactivation failed</value>
  </data>
  <data name="MSG_ActiveUser_Confirmation" xml:space="preserve">
    <value>Are you sure to activate total user(s) </value>
  </data>
  <data name="MSG_DeActivateUser_Confirmation" xml:space="preserve">
    <value>Are you sure to deactivate total user(s)</value>
  </data>
  <data name="MSG_SelectedUser_Already_Active" xml:space="preserve">
    <value>Selected user(s) already in active state</value>
  </data>
  <data name="MSG_SelectedUser_Already_DeActive" xml:space="preserve">
    <value>Selected User(s) already in deactive state</value>
  </data>
  <data name="MSG_UserRemovedFrom_Group_Sucess" xml:space="preserve">
    <value>User(s) successfully  removed from group </value>
  </data>
  <data name="MSG_User_Inactive_wouldnot_Assign_Group" xml:space="preserve">
    <value>Inactive users can not be assign to a group</value>
  </data>
  <data name="ddlListBasedOnFilterBy_Select_Domain_Text" xml:space="preserve">
    <value>Select Domain</value>
  </data>
  <data name="MSG_ActiveUser_Confirmation_SingleUser" xml:space="preserve">
    <value>Are you sure to activate user</value>
  </data>
  <data name="MSG_DeActivateUser_Confirmation_SingleUser" xml:space="preserve">
    <value>Are you sure to deactivate user</value>
  </data>
  <data name="MSG_SelectAtleastOne_Activate" xml:space="preserve">
    <value>Select at least one user to activate</value>
  </data>
  <data name="MSG_SelectAtleastOne_Deactivate" xml:space="preserve">
    <value>Select at least one user to deactivate</value>
  </data>
  <data name="MSG_SelectAtleastOne_ToRemoveGroup" xml:space="preserve">
    <value>Please select at least one user to remove from group</value>
  </data>
  <data name="mdl_Remove_Users_Header" xml:space="preserve">
    <value>Remove Users From Group</value>
  </data>
</root>